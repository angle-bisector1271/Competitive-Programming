struct SegmentTree {
    int n;
    vector<int> tree;

    SegmentTree(const vector<int>& a) {
        n = a.size();
        tree.resize(2 * n);
        copy(a.begin(), a.end(), tree.begin() + n);
        for (int i = n - 1; i > 0; --i)
            tree[i] = tree[2 * i] + tree[2 * i + 1];
    }

    void update(int pos, int value) {
        for (tree[pos += n] = value; pos > 1; pos /= 2)
            tree[pos / 2] = tree[pos] + tree[pos ^ 1];
    }

    int query(int l, int r) const {
        int res = 0;
        for (l += n, r += n + 1; l < r; l /= 2, r /= 2) {
            if (l & 1) res += tree[l++];
            if (r & 1) res += tree[--r];
        }
        return res;
    }
};
